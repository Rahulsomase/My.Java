Q3) Differentiate between process and thread.
ANS:-

Process:-
1) A process is an instance of a program that is being executed.
2) When we run a program, it does not execute directly.
3) It takes some time to follow all the steps required to execute the program, and following these execution steps is known as a process.
4) Each time we create a process, we need to make a separate system call for each process to the OS. The fork() function creates the process.
5) Each process exists within its own address or memory space.
6) Each process is independent and treated as an isolated process by the OS.


thread:-
1) A thread is the subset of a process and is also known as the lightweight process. 
2) A process can have more than one thread, and these threads are managed independently by the scheduler.
3) All the threads within one process are interrelated to each other. Threads have some common information, such as data segment, code segment, files, etc., that is shared to their peer threads. But contains its own registers, stack, and counter.
4) When a process starts, OS assigns the memory and resources to it. Each thread within a process shares the memory and resources of that process only.
5) Threads are mainly used to improve the processing of an application. In reality, only a single thread is executed at a time, but due to fast context switching between threads gives an illusion that threads are running parallelly.
6) If a single thread executes in a process, it is known as a single-threaded And if multiple threads execute simultaneously, then it is known as multithreading.